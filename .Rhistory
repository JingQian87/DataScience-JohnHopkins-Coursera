source('~/.active-rstudio-document')
View(cov_now)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(cov_now)
source('~/Desktop/R/errorForv2.R')
mean(vn_data$v2data)
summary(vn_data)
source('~/Desktop/R/errorForv2.R')
rm(V*)
source('~/Desktop/R/errorForv2.R')
View(vn_data)
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(result.df)
source('~/.active-rstudio-document')
View(result.df)
install.packages("caret")
setwd("~/")
data_charged = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_charged_Pb1020_SV008_Glb10000.txt")
data_charged = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_charged_Pb1020_SV008_Glb10000.txt")
data_pionp = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_Pb1020_SV008_Glb10000.txt")
data_pionp_thermal = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_thermal_Pb1020_SV008_Glb10000.txt")
View(data_charged)
linspace(10,0,2)
install.packages("pracma")
linspace(0,3.5,30)
update.packages
update.packages{utils}
update.packages {utils}
logspace(1,2,50)
install.packages(pracma)
install.packages("pracma")
linspace(1, 10, 9)
install.packages("matlab")
linsapce(1,10,4)
for (i in seq(1,30))
{
print i
for (i in seq(1,30))
{
print(i)
}
np.linspace(0,3.5,30)
seq(0,3.5,30)
seq(0,3.5,length.out=30)
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
Vi = paste("V",i, sep = "")
v2_charged[i, 1] = mean(data_charged$Vi)
}
npt = 30
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
Vi = paste("V",i, sep = "")
v2_charged[i, 1] = mean(data_charged$Vi)
}
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
Vi = paste("V",i, sep = "")
x = data_charged$Vi
#v2_charged[i, 1] = mean(data_charged$Vi)
}
data_charged = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_charged_Pb1020_SV008_Glb10000.txt")
data_pionp = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_Pb1020_SV008_Glb10000.txt")
data_pionp_thermal = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_thermal_Pb1020_SV008_Glb10000.txt")
data_charged[,1]
nrow(data_charged)
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
v2_charged[i, 1] = mean(data_charged[,i])
v2_charged[i, 2] = sd(data_charged[,i])//sqrt(nrow(data_charged))
}
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
v2_charged[i, 1] = mean(data_charged[,i])
v2_charged[i, 2] = sd(data_charged[,i])/sqrt(nrow(data_charged))
}
npt = 30
data_charged = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_charged_Pb1020_SV008_Glb10000.txt")
data_pionp = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_Pb1020_SV008_Glb10000.txt")
data_pionp_thermal = read.table("/Users/mac/Desktop/WithResonDecay/DifferentialFlow/v2_pionp_thermal_Pb1020_SV008_Glb10000.txt")
v2_charged = matrix(0, npt, 2)
for (i in seq(1,length(npt)))
{
npt = seq(0, 3.5, length.out = 30)
v2_charged[i, 1] = mean(data_charged[,i])
v2_charged[i, 2] = sd(data_charged[,i])/sqrt(nrow(data_charged))
}
View(`v2_charged`)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
npt = 30
pt = seq(0, 3.5, length.out = npt)
source('~/Desktop/WithResonDecay/DifferentialFlow/v2_compare.R', echo=TRUE)
v = read.table("/Users/mac/Desktop/utilities/Data_Vn_test/v2_SV008_Pb3040_Glb1000_ResonDecay.txt")
sd(v)
sd(v$V1)
mean(v$V1)
sd(v$V1)／sqrt(1000)
sd(v$V1)/sqrt(1000)
# load library
library(RSQLite)
install packages("DBI")
install.packages("DBI")
install.packages("DBI")
library(RSQLite)
install.packages("DBI")
install.packages("DBI")
library(RSQLite)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minibias.db')
ecc_table = dbReadTable(ecc_db, 'eccentricities')
dbListTables(ecc_db)
view(ecc_db)
str(ecc_db)
data = dbGetQuery(ecc_db, "select * from raws")
dbListResults(ecc_db)
dbListResults(ecc_db)[[1]]
dbListTables(ecc_db)
clear
# load library
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minibias.db')
dbListTables(ecc_db)
dbListResults(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minibiasEcc.db')
dbListTables(ecc_db)
dbListResults(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minibiasEcc.db')
str(ecc_table)
# load library
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
str(ecc_table)
ecc = subset(ecc_table, ecc_id = "1")
View(ecc)
ecc = subset(ecc_table, ecc_id = "0")
ecc = subset(ecc_table, ecc_table$ecc_id = "0")
ecc = subset(ecc_table, ecc_table$V2 = "0")
ecc = subset(ecc_table, ecc_table$v2 = "0")
view(ecc_table$V1)
View(ecc_table$V1)
View(ecc_table$V2)
View(ecc_table)
View(ecc_table$event_id)
View(ecc_table$event_id, ecc_table$ecc_id="3")
ecc_table[,1]
ecc = ecc_table[ecc_table[, 1]="1"]
ecc = ecc_table[ecc_table[, 1]=="1"]
ecc = ecc_table[ecc_table[, 1]==1]
ecc = ecc_table[ecc_table[, 1]=1]
ecc = ecc_table[ecc_id=1]
ecc = subset(ecc_table, ecc_id=1)
ecc = subset(ecc_table, event_id=1)
View(ecc)
ecc = subset(ecc_table, event_id=1, select = 1:5)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc = subset(ecc_table, event_id=1, select = 1:5)
View(ecc_table)
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
a=dbReadTable(ecc_db, 'collisionParameters')
View(ecc_table)
ecc_table$V2="3"
b=subset(ecc_table, ecc_id=3)
b=subset(ecc_table, ecc_id>1)
View(b)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc = subset(ecc_table, ecc_id<2)
nrow(ecc)
View(ecc$event_id)
mean(ecc$event_id)
ecc$event_id
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc_osc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc = subset(ecc_table, ecc_id<2)
View(ecc)
mean(ecc$event_id)
nrow(ecc$event_id)
nrow(ecc)
View(ecc)
# load library
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc = subset(ecc_table, ecc_id<2)
ecc = subset(ecc_table, n=1, ecc_id<2)
ecc = subset(ecc_table, n<2, ecc_id<2)
ecc = subset(ecc_table, n==1, ecc_id<2)
View(ecc)
ecc = subset(ecc_table, ecc_id<2)
length(unique(ecc_table$event_id))
ecc = subset(ecc_table, n==1, ecc_id<2)
ecc = subset(ecc_table, n=1, ecc_id<2)
ecc = subset(ecc_table, n>1, ecc_id<2)
View(ecc)
library(RSQLite)
ecc_db = dbConnect(SQLite(), '/Users/mac/Desktop/minbiasEcc.db')
dbListTables(ecc_db)
ecc_table = dbReadTable(ecc_db, 'eccentricities')
ecc = subset(ecc_table, n==1 & ecc_id<2)
ecc = subset(ecc_table, n==1 & ecc_id==2)
ecc = subset(ecc_table, n==1 & ecc_id==1)
View(ecc)
ecc = subset(ecc_table, n==1 & ecc_id==1)
length(unique(ecc_table$event_id))
source('~/Desktop/utilities/TestNevents_ThermalPion/TestNevents_ThermalPion.R', echo=TRUE)
source('~/Desktop/utilities/TestNevents_ThermalPion/TestNevents_ThermalPion.R', echo=TRUE)
source('~/Desktop/utilities/TestNevents_ThermalPion/TestNevents_ThermalPion_ThermalData.R', echo=TRUE)
source('~/Desktop/utilities/TestNevents_ThermalPion/TestNevents_ThermalPion_ThermalData.R', echo=TRUE)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_event1_KLN_SV02/piViolation.dat")
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_KLN_Pb2030_event1/piViolation.dat")
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_KLN_Pb2030_event1/piViolation.dat")
summary(Data)
nrow(Data)
num = Data$V5 * 0.197
nrow(num[num<0.18])
length(num[num<0.18])
length(num[num>0.18])
View(num)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
View(num)
nrow(Data)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_Glb_Pb2030_event1/piViolation.dat")
nrow(Data)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_Glb_Pb2030_event2/piViolation.dat")
nrow(Data)
source('~/Desktop/Untitled.R', echo=TRUE)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_Glb_Pb2030_event2/piViolation.dat")
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
View(Data)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
Data = read.table("/Users/mac/Desktop/temp_osc/VISHNew/results_SV02_KLN_Pb2030_event1/piViolation.dat")
nrow(Data)
nrow(Data[0.6<Data$V1<2 & Data$V5>0.91])
str(Data)
Selected_data = subset(Data, 0.6<Data$V1<2 & Data$V5>0.91)
Selected_data = subset(Data, 0.6<Data$V1 & Data$V5>0.91)
Selected_data = subset(Data, Data$V1>0.6 & Data$V1<2 & Data$V5>0.91)
View(Selected_data)
Selected_Data = subset(Data, Data$V1>0.6 & Data$V1<2 & Data$V5>0.914)#t between(0.6,2), e*0.197>0.18
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
library(ggplot2)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_KLN_Pb2030_event2/surface.dat")
Data[1]
Data[,1]
str(Data)
t = apply(Data$V1, 1, as.numeric)
Data[1,2]
Data[2,1]
t = apply(Data[, 1], 1, as.numeric)
t = Data[, 1]
str(t)
View(Data)
t = Data$V1
str(t)
library(ggplot2)
Data = read.table("/Users/mac/Desktop/temp_prb/VISHNew/results_SV02_KLN_Pb2030_event2/surface.dat")
t = Data$V1
r = Data$V5
plot(r, t, xlab = "r of freeze out surface", ylab = "t of freeze out surface",
col = "blue")
name_directory = c("prb", "osc")
name_event = c("SV02_Glb_Pb2030_event1", "SV02_Glb_Pb2030_event2",
"SV02_KLN_Pb2030_event1", "SV02_KLN_Pb2030_event2", )
name_table = "surface.dat"
for (idirectory in seq(1, length(name_directory))){
for (ievent in seq(1, length(name_event))){
name_event = c("SV02_Glb_Pb2030_event1", "SV02_Glb_Pb2030_event2",
"SV02_KLN_Pb2030_event1", "SV02_KLN_Pb2030_event2")
source('~/Desktop/PlotSurface.R', echo=TRUE)
}
]
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/PlotSurface.R', echo=TRUE)
source('~/Desktop/Untitled.R', echo=TRUE)
print("nrow(Data)", nrow(Data))
print("nrow(Data)"), print(nrow(Data))
print("nrow(Data)")
print(paste("nrow(Data)", nrow(Data)))
source('~/Desktop/Untitled.R', echo=TRUE)
test = tbl_df(f_db)
#calculate the correlation <a^2b^2>-<a^2><b^2>
library(dplyr)
install.packages("dplyr")
library(dplyr)
print(1:3)
sample(1:3)
runif(10, min=0, max=2pi)
runif(10, min=0, max=2*pi)
Hist(runif(10, min=0, max=2*pi))
hist(runif(10, min=0, max=2*pi)
)
hist(runif(100, min=0, max=2*pi))
runif(min=0, max=2*pi)
dunif(x, min=0, max=1)
dunif(200, min=0, max=1)
dunif(200, min=0, max=1)
dunif(0.2, min=0, max=1)
dunif(0.2, min=0, max=1)
var(runif(100))
var(runif(10000))
mean(runif(100))
mean(runif(10000))
mean(runif(1000000))
hist(runif(10000))
hist(runif(1000000))
hist(runif(2000))
library(propagate)
a=read.table('/Users/mac/Desktop/Nonlinear_fix_16FebMar/e4_v4l_v4_e2_v2.txt')
a[1]
x=c(a[1], a[2])
y=c(a[3], a[4])
DF = cbind(x,y)
exp = expression(x+y^2)
propagate(expr = exp, data = DF, type = "stat", do.sim=TRUE, verbose=TRUE)
library(randomForest)
install.packages("randomForest")
install.packages("randomForest")
setwd('/Users/mac/Desktop/DataScience-JohnHopkins-Coursera/')
if (!file.exists("data")){dir.create('data')}
install.package('rmarkdown')
install.packages('rmarkdown')
install.packages("rmarkdown")
